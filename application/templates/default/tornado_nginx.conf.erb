# nginx + tornado application vhost
#
# Generated by Chef for <%= node[:fqdn] %>
# Local modifications will be overwritten.
#
#

upstream <%= @app %> {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the Unicorn master nukes a
    # single worker for timing out).

    server 127.0.0.1:<%= @tornado_port %> fail_timeout=0;
}

server {
    listen <%= @port %>;

    client_max_body_size 4G;
    server_name <% @server_aliases.each do |a| %><%= " #{a}" %> <% end %>;

    error_log <%= node[:nginx][:log_dir] %>/<%= @app %>-error.log;
    access_log <%= node[:nginx][:log_dir] %>/<%= @app %>-access.log combined;

    # ~2 seconds is often enough for most folks to parse HTML/CSS and
    # retrieve needed images/icons/frames, connections are cheap in
    # nginx so increasing this is generally safe...
    keepalive_timeout 5;

    # path for static files
    root <%= @docroot %>;

    location /media/admin {
      <%- if @virtualenv %>
      alias <%= @virtualenv %>/lib/python2.6/site-packages/django/contrib/admin/media/;
      <% else %>
      alias /usr/lib/python2.6/site-packages/django/contrib/admin/media/;
      <% end %>
      break;
    }

    location /media/ {
        alias <%= @docroot %>;
        break;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        proxy_read_timeout 120;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://<%= @app %>;
            break;
        }
    }
}
